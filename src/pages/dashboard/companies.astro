---
// src/pages/dashboard/companies.astro
import { initializeDatabase } from '../../db/db.js';
import pkg from 'jsonwebtoken';
const { verify } = pkg;
import HeaderDashboard from '../../components/Header-dashboard.astro';
import Sidebar from '../../components/Sidebar.astro';
import '../../styles/global.css';

// Inicializa la base de datos
await initializeDatabase().catch(err => console.error("Error al inicializar DB desde companies.astro:", err));

const JWT_SECRET = '0402Dionel.*';

let username = 'Usuario';
let userId = null;
let activeCompanyId: number | null = null;
let activeCompanyName: string = 'Sin Empresa';
let userCompanies: any[] = []; // Para almacenar las empresas del usuario

try {
    const token = Astro.cookies.get('auth_token')?.value;

    if (!token) {
        return Astro.redirect('/login');
    }

    const decoded = verify(token, JWT_SECRET);
    if (typeof decoded === 'object' && decoded !== null) {
        username = decoded.username || 'Usuario';
        userId = decoded.userId;
    } else {
        console.error("Token decodificado en companies.astro no es un objeto:", decoded);
        return Astro.redirect('/login');
    }

    const db = await initializeDatabase();

    // Obtener TODAS las empresas a las que el usuario tiene acceso
    userCompanies = await db.all(
        `SELECT c.id, c.company_name, ucr.role
        FROM companies c
        JOIN user_company_roles ucr ON c.id = ucr.company_id
        WHERE ucr.user_id = ?`,
        userId
    );

    // Lógica para determinar la empresa activa
    const activeCompanyCookie = Astro.cookies.get('active_company_id')?.value;
    if (activeCompanyCookie) {
        const companyInfo = await db.get(
            `SELECT c.id, c.company_name FROM companies c JOIN user_company_roles ucr ON c.id = ucr.company_id WHERE c.id = ? AND ucr.user_id = ?`,
            activeCompanyCookie,
            userId
        );
        if (companyInfo) {
            activeCompanyId = companyInfo.id;
            activeCompanyName = companyInfo.company_name;
        } else {
            // Si la cookie existe pero el ID de empresa no es válido para este usuario, la limpiamos.
            console.warn("Empresa activa en cookie no válida para el usuario o no encontrada en DB. Limpiando cookie.");
            Astro.cookies.set('active_company_id', '', { expires: new Date(0), path: '/' });
            activeCompanyId = null; // Asegurarse de que quede nulo
        }
    }

    // Si no hay empresa activa (o la cookie fue limpiada) y el usuario tiene empresas,
    // establecemos la primera como la activa SOLO EN MEMORIA para esta renderización.
    if (activeCompanyId === null && userCompanies.length > 0) {
        const firstCompany = userCompanies[0];
        activeCompanyId = firstCompany.id;
        activeCompanyName = firstCompany.company_name;
        console.log(`companies.astro: Estableciendo por defecto la primera empresa del usuario para renderizado: ${activeCompanyId}`);
    }

} catch (error: unknown) {
    if (error instanceof Error) {
        console.error("Error en companies.astro:", error.message);
    } else {
        console.error("Error en companies.astro:", error);
    }
    return Astro.redirect('/login');
}

---
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Empresas | Contabilito</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body class="font-poppins bg-gray-100 min-h-screen flex flex-col">
    <HeaderDashboard
        activeCompanyId={activeCompanyId}
        activeCompanyName={activeCompanyName}
        userCompanies={userCompanies}
    />

    <div class="flex flex-grow pt-[60px]">
        <Sidebar />

        <main class="flex-grow p-8 ml-56">
            <div class="bg-white rounded-2xl shadow-xl p-8 w-full mx-auto">
                <h1 class="text-3xl font-extrabold text-gray-900 mb-6 text-center">
                    Gestión de Empresas
                </h1>
                <div class="mb-8 p-6 bg-gray-100 rounded-lg shadow-inner text-center">
                    <h2 class="text-2xl font-semibold text-blue-800 mb-2">Empresa Activa Actual:</h2>
                    <p class="text-3xl font-bold text-gray-900">{activeCompanyName || 'Ninguna seleccionada'}</p>
                </div>

                <div class="text-center mb-8">
                    <button id="createCompanyBtn" class="bg-blue-700 text-white px-6 py-3 rounded-md hover:bg-blue-800 transition-colors duration-400 text-lg font-semibold shadow-lg">
                        + Crear Nueva Empresa
                    </button>
                </div>

                <div id="createCompanyFormContainer" class="hidden bg-gray-50 p-6 rounded-lg shadow-md mb-8">
                    <h2 class="text-2xl font-semibold text-gray-800 mb-4 text-center">Crear Nueva Empresa</h2>
                    <form id="createCompanyForm" class="max-w-md mx-auto space-y-4">
                        <div>
                            <label for="companyName" class="block text-sm font-medium text-gray-700 mb-1">Nombre de la Empresa</label>
                            <input type="text" id="companyName" name="companyName" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" placeholder="Ej. Mi Negocio S.A." />
                        </div>
                        <button type="submit" class="w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors duration-200 font-semibold">
                            Crear Empresa
                        </button>
                        <button type="button" id="cancelCreateCompanyBtn" class="w-full bg-gray-300 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-400 transition-colors duration-200 font-semibold mt-2">
                            Cancelar
                        </button>
                    </form>
                    <p id="createCompanyMessage" class="mt-4 text-center text-sm"></p>
                </div>

                <h2 class="text-2xl font-semibold text-gray-800 mb-4 text-center">Mis Empresas</h2>
                <div class="overflow-x-auto bg-white rounded-lg shadow-md">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Nombre de la Empresa
                                </th>
                                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Rol
                                </th>
                                <th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Acciones
                                </th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            {userCompanies.length === 0 ? (
                                <tr>
                                    <td colspan="3" class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center italic">
                                        No perteneces a ninguna empresa aún. ¡Crea una!
                                    </td>
                                </tr>
                            ) : (
                                userCompanies.map((company) => (
                                    <tr>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                                            {company.company_name}
                                            {company.id == activeCompanyId && (
                                                <span class="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                                                    Activa
                                                </span>
                                            )}
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                            {company.role === 'owner' ? 'Propietario' : company.role === 'admin' ? 'Administrador' : 'Miembro'}
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium text-center">
                                            {company.id != activeCompanyId && (
                                                <button
                                                    data-company-id={company.id}
                                                    data-company-name={company.company_name}
                                                    class="switch-company-btn text-blue-600 hover:text-blue-900 mr-4"
                                                    title="Cambiar a esta empresa"
                                                >
                                                    <i class="fas fa-toggle-on mr-1"></i>Seleccionar
                                                </button>
                                            )}
                                            {/* Botón de Editar Empresa visible para owner y admin */}
                                            {(company.role === 'owner' || company.role === 'admin') && (
                                                <button
                                                    data-company-id={company.id}
                                                    data-company-name={company.company_name}
                                                    class="edit-company-btn text-yellow-600 hover:text-yellow-800 mr-4"
                                                    title="Editar nombre de la empresa"
                                                >
                                                    <i class="fas fa-edit mr-1"></i>
                                                </button>
                                            )}
                                            {/* Botón de Eliminar Empresa visible solo para el owner */}
                                            {company.role === 'owner' && (
                                                <button
                                                    data-company-id={company.id}
                                                    data-company-name={company.company_name}
                                                    class="delete-company-btn text-red-600 hover:text-red-800"
                                                    title="Eliminar esta empresa"
                                                >
                                                    <i class="fas fa-trash-alt mr-1"></i>
                                                </button>
                                            )}
                                        </td>
                                    </tr>
                                ))
                            )}
                        </tbody>
                    </table>
                </div>
            </div>
        </main>
    </div>

    <!-- Modal para editar empresa -->
    <div id="editModal" class="hidden fixed inset-0 z-50 flex items-center justify-center bg-gray-800/40 backdrop-blur bg-opacity-75 p-4">
        <div class="bg-white rounded-lg shadow-xl p-8 w-full max-w-lg">
            <h2 class="text-2xl font-bold mb-4">Editar Nombre de la Empresa</h2>
            <form id="editCompanyForm">
                <input type="hidden" id="editCompanyId" name="companyId">
                <div class="mb-4">
                    <label for="editCompanyName" class="block text-sm font-medium text-gray-700">Nuevo Nombre de la Empresa</label>
                    <input type="text" id="editCompanyName" name="newCompanyName" required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" />
                </div>
                <div class="flex justify-end space-x-4">
                    <button type="button" id="cancelEditBtn" class="bg-gray-300 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-400 transition-colors duration-200 font-semibold">
                        Cancelar
                    </button>
                    <button type="submit" class="bg-yellow-600 text-white px-4 py-2 rounded-md hover:bg-yellow-700 transition-colors duration-200 font-semibold">
                        Guardar Cambios
                    </button>
                </div>
            </form>
            <p id="editMessage" class="mt-4 text-center text-sm"></p>
        </div>
    </div>

    <!-- Modal para confirmar eliminación -->
    <div id="deleteModal" class="hidden fixed inset-0 z-50 flex items-center justify-center backdrop-blur bg-gray-800/50 bg-opacity-75 p-4">
        <div class="bg-white rounded-lg shadow-xl p-8 w-full max-w-lg text-center">
            <i class="fas fa-exclamation-triangle text-5xl text-red-500 mb-4"></i>
            <h2 class="text-2xl font-bold mb-4">¿Estás seguro de que quieres eliminar esta empresa?</h2>
            <p class="text-gray-700 mb-6">Esta acción es irreversible y eliminará la empresa "<span id="deleteCompanyNameSpan" class="font-bold"></span>" junto con todos sus datos asociados.</p>
            <div class="flex justify-center space-x-4">
                <button type="button" id="cancelDeleteBtn" class="bg-gray-300 text-gray-800 px-4 py-2 rounded-md hover:bg-gray-400 transition-colors duration-200 font-semibold">
                    Cancelar
                </button>
                <button type="button" id="confirmDeleteBtn" class="bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors duration-200 font-semibold">
                    Sí, Eliminar Empresa
                </button>
            </div>
            <p id="deleteMessage" class="mt-4 text-center text-sm"></p>
        </div>
    </div>

    <!-- Modal para mensajes de alerta/confirmación genéricos -->
    <div id="messageModal" class="hidden fixed inset-0 z-50 flex items-center backdrop-blur justify-center bg-gray-800/40 bg-opacity-75 p-4">
        <div class="bg-white rounded-lg shadow-xl  z-51 p-8 w-full max-w-sm text-center">
            <i id="messageIcon" class="fas fa-info-circle text-4xl mb-4"></i>
            <p id="messageText" class="text-gray-700 mb-6"></p>
            <button id="closeMessageBtn" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors duration-200 font-semibold">
                Entendido
            </button>
        </div>
    </div>

    <script is:inline>
        // === ELEMENTOS DEL DOM ===
        const createCompanyBtn = document.getElementById('createCompanyBtn');
        const createCompanyFormContainer = document.getElementById('createCompanyFormContainer');
        const cancelCreateCompanyBtn = document.getElementById('cancelCreateCompanyBtn');
        const createCompanyForm = document.getElementById('createCompanyForm');
        const companyNameInput = document.getElementById('companyName');
        const createCompanyMessage = document.getElementById('createCompanyMessage');
        const switchCompanyButtons = document.querySelectorAll('.switch-company-btn');

        // Modals
        const editModal = document.getElementById('editModal');
        const editCompanyForm = document.getElementById('editCompanyForm');
        const editCompanyIdInput = document.getElementById('editCompanyId');
        const editCompanyNameInput = document.getElementById('editCompanyName');
        const cancelEditBtn = document.getElementById('cancelEditBtn');
        const editMessage = document.getElementById('editMessage');

        const deleteModal = document.getElementById('deleteModal');
        const deleteCompanyNameSpan = document.getElementById('deleteCompanyNameSpan');
        const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
        const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
        const deleteMessage = document.getElementById('deleteMessage');

        const messageModal = document.getElementById('messageModal');
        const messageIcon = document.getElementById('messageIcon');
        const messageText = document.getElementById('messageText');
        const closeMessageBtn = document.getElementById('closeMessageBtn');

        // Función para mostrar un modal de mensaje personalizado
        function showMessageModal(text, isError = false) {
            messageText.textContent = text;
            if (isError) {
                messageIcon.className = 'fas fa-times-circle text-4xl text-red-500 mb-4';
            } else {
                messageIcon.className = 'fas fa-info-circle text-4xl text-blue-500 mb-4';
            }
            messageModal.classList.remove('hidden');
        }

        // === LÓGICA DE CREACIÓN DE EMPRESA ===
        createCompanyBtn.addEventListener('click', () => {
            createCompanyFormContainer.classList.remove('hidden');
            createCompanyBtn.classList.add('hidden');
            companyNameInput.focus();
        });

        cancelCreateCompanyBtn.addEventListener('click', () => {
            createCompanyFormContainer.classList.add('hidden');
            createCompanyBtn.classList.remove('hidden');
            createCompanyForm.reset();
            createCompanyMessage.textContent = '';
            createCompanyMessage.className = 'mt-4 text-center text-sm';
        });

        createCompanyForm.addEventListener('submit', async (event) => {
            event.preventDefault();
            createCompanyMessage.textContent = 'Creando empresa...';
            createCompanyMessage.className = 'mt-4 text-center text-sm text-blue-600';

            const companyName = companyNameInput.value;

            try {
                const response = await fetch('/api/companies/create', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ companyName }),
                });

                const data = await response.json();

                if (response.ok) {
                    showMessageModal(data.message);
                    createCompanyForm.reset();
                    window.location.reload();
                } else {
                    showMessageModal(data.message || 'Error al crear la empresa.', true);
                }
            } catch (error) {
                console.error('Error de red al crear empresa:', error);
                showMessageModal('Error de red. Inténtalo de nuevo.', true);
            }
        });

        // === LÓGICA DE CAMBIO DE EMPRESA ===
        switchCompanyButtons.forEach(button => {
            button.addEventListener('click', async (event) => {
                const companyId = event.target.dataset.companyId;
                const companyName = event.target.dataset.companyName;

                showMessageModal(`¿Estás seguro de que quieres cambiar a la empresa "${companyName}"?`);
                closeMessageBtn.textContent = 'Cancelar';
                closeMessageBtn.onclick = () => messageModal.classList.add('hidden');

                const newConfirmBtn = document.createElement('button');
                newConfirmBtn.textContent = 'Sí, cambiar';
                newConfirmBtn.className = 'bg-blue-600 mr-10 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors duration-200 font-semibold';
                newConfirmBtn.onclick = async () => {
                    messageModal.classList.add('hidden');
                    try {
                        const response = await fetch('/api/companies/switch', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ companyId: parseInt(companyId) }),
                        });

                        const data = await response.json();

                        if (response.ok) {
                            window.location.href = '/dashboard';
                        } else {
                            showMessageModal(data.message || 'Error al cambiar de empresa.', true);
                        }
                    } catch (error) {
                        console.error('Error de red al cambiar empresa:', error);
                        showMessageModal('Error de red al cambiar de empresa.', true);
                    }
                };

                const flexContainer = closeMessageBtn.parentElement;
                flexContainer.insertBefore(newConfirmBtn, closeMessageBtn);

                messageModal.addEventListener('transitionend', () => {
                    if (messageModal.classList.contains('hidden')) {
                         newConfirmBtn.remove();
                         closeMessageBtn.textContent = 'Entendido';
                         closeMessageBtn.onclick = () => messageModal.classList.add('hidden');
                    }
                }, { once: true });
            });
        });

        // === LÓGICA DE EDICIÓN DE EMPRESA ===
        document.querySelectorAll('.edit-company-btn').forEach(button => {
            button.addEventListener('click', (event) => {
                const companyId = event.currentTarget.dataset.companyId;
                const companyName = event.currentTarget.dataset.companyName;
                editCompanyIdInput.value = companyId;
                editCompanyNameInput.value = companyName;
                editModal.classList.remove('hidden');
            });
        });

        cancelEditBtn.addEventListener('click', () => {
            editModal.classList.add('hidden');
            editMessage.textContent = '';
        });

        editCompanyForm.addEventListener('submit', async (event) => {
            event.preventDefault();
            editMessage.textContent = 'Actualizando...';
            editMessage.className = 'mt-4 text-center text-sm text-blue-600';

            const companyId = editCompanyIdInput.value;
            const newCompanyName = editCompanyNameInput.value;

            try {
                const response = await fetch('/api/companies/update', {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ companyId: parseInt(companyId), newCompanyName }),
                });

                const data = await response.json();

                if (response.ok) {
                    showMessageModal('¡Empresa actualizada con éxito!');
                    editModal.classList.add('hidden');
                    window.location.reload();
                } else {
                    editMessage.textContent = data.message || 'Error al actualizar la empresa.';
                    editMessage.className = 'mt-4 text-center text-sm text-red-600';
                }
            } catch (error) {
                console.error('Error de red al actualizar empresa:', error);
                editMessage.textContent = 'Error de red. Inténtalo de nuevo.';
                editMessage.className = 'mt-4 text-center text-sm text-red-600';
            }
        });

        // === LÓGICA DE ELIMINACIÓN DE EMPRESA ===
        document.querySelectorAll('.delete-company-btn').forEach(button => {
            button.addEventListener('click', (event) => {
                const companyId = event.currentTarget.dataset.companyId;
                const companyName = event.currentTarget.dataset.companyName;
                deleteCompanyNameSpan.textContent = companyName;
                deleteModal.setAttribute('data-company-id', companyId);
                deleteModal.classList.remove('hidden');
            });
        });

        cancelDeleteBtn.addEventListener('click', () => {
            deleteModal.classList.add('hidden');
            deleteMessage.textContent = '';
        });

        confirmDeleteBtn.addEventListener('click', async () => {
            deleteMessage.textContent = 'Eliminando empresa...';
            deleteMessage.className = 'mt-4 text-center text-sm text-blue-600';

            const companyId = deleteModal.getAttribute('data-company-id');

            try {
                const response = await fetch('/api/companies/delete', {
                    method: 'DELETE',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ companyId: parseInt(companyId) }),
                });

                const data = await response.json();

                if (response.ok) {
                    showMessageModal('¡Empresa eliminada con éxito!');
                    deleteModal.classList.add('hidden');
                    window.location.reload();
                } else {
                    deleteMessage.textContent = data.message || 'Error al eliminar la empresa.';
                    deleteMessage.className = 'mt-4 text-center text-sm text-red-600';
                }
            } catch (error) {
                console.error('Error de red al eliminar empresa:', error);
                deleteMessage.textContent = 'Error de red. Inténtalo de nuevo.';
                deleteMessage.className = 'mt-4 text-center text-sm text-red-600';
            }
        });

        closeMessageBtn.addEventListener('click', () => {
            messageModal.classList.add('hidden');
        });
    </script>
</body>
</html>
